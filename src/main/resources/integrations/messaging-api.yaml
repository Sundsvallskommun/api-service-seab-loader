openapi: 3.0.1
info:
  title: Messaging
  contact: { }
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: "5.0"
servers:
  - url: http://localhost:57261
    description: Generated server url
paths:
  /{municipalityId}/webmessage:
    post:
      tags:
        - Sending Resources
      summary: Send a single web message
      operationId: sendWebMessage
      parameters:
        - name: x-origin
          in: header
          required: false
          schema:
            type: string
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: async
          in: query
          description: Whether to send the message asynchronously
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebMessageRequest"
        required: true
      responses:
        "201":
          description: Successful Operation
          headers:
            Location:
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResult"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MessageResult"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/sms:
    post:
      tags:
        - Sending Resources
      summary: Send a single SMS
      operationId: sendSms
      parameters:
        - name: x-origin
          in: header
          required: false
          schema:
            type: string
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: async
          in: query
          description: Whether to send the message asynchronously
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SmsRequest"
        required: true
      responses:
        "201":
          description: Successful Operation
          headers:
            Location:
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResult"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MessageResult"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/sms/batch:
    post:
      tags:
        - Sending Resources
      summary: Send a batch of sms asynchronously
      operationId: sendSmsBatch
      parameters:
        - name: x-origin
          in: header
          required: false
          schema:
            type: string
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SmsBatchRequest"
        required: true
      responses:
        "201":
          description: Successful Operation
          headers:
            Location:
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageBatchResult"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MessageBatchResult"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/slack:
    post:
      tags:
        - Sending Resources
      summary: Send a single Slack message
      operationId: sendToSlack
      parameters:
        - name: x-origin
          in: header
          required: false
          schema:
            type: string
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: async
          in: query
          description: Whether to send the message asynchronously
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SlackRequest"
        required: true
      responses:
        "201":
          description: Successful Operation
          headers:
            Location:
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResult"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MessageResult"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/messages:
    post:
      tags:
        - Sending Resources
      summary: Send a batch of messages as e-mail or SMS to a list of parties
      operationId: sendMessages
      parameters:
        - name: x-origin
          in: header
          required: false
          schema:
            type: string
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: async
          in: query
          description: Whether to send the message asynchronously
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageRequest"
        required: true
      responses:
        "201":
          description: Successful Operation
          headers:
            Location:
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageBatchResult"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MessageBatchResult"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/letter:
    post:
      tags:
        - Sending Resources
      summary: Send a single letter as digital mail or snail mail
      operationId: sendLetter
      parameters:
        - name: x-origin
          in: header
          required: false
          schema:
            type: string
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: async
          in: query
          description: Whether to send the message asynchronously
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LetterRequest"
        required: true
      responses:
        "201":
          description: Successful Operation
          headers:
            Location:
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageBatchResult"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MessageBatchResult"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/email:
    post:
      tags:
        - Sending Resources
      summary: Send a single e-mail
      operationId: sendEmail
      parameters:
        - name: x-origin
          in: header
          required: false
          schema:
            type: string
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: async
          in: query
          description: Whether to send the message asynchronously
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailRequest"
        required: true
      responses:
        "201":
          description: Successful Operation
          headers:
            Location:
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResult"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MessageResult"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/email/batch:
    post:
      tags:
        - Sending Resources
      summary: Send a batch of e-mails asynchronously
      operationId: sendEmailBatch
      parameters:
        - name: x-origin
          in: header
          required: false
          schema:
            type: string
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailBatchRequest"
        required: true
      responses:
        "201":
          description: Successful Operation
          headers:
            Location:
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageBatchResult"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MessageBatchResult"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/digital-mail:
    post:
      tags:
        - Sending Resources
      summary: Send a single digital mail to one or more parties
      operationId: sendDigitalMail
      parameters:
        - name: x-origin
          in: header
          required: false
          schema:
            type: string
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: async
          in: query
          description: Whether to send the message asynchronously
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DigitalMailRequest"
        required: true
      responses:
        "201":
          description: Successful Operation
          headers:
            Location:
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageBatchResult"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MessageBatchResult"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/digital-invoice:
    post:
      tags:
        - Sending Resources
      summary: Send a digital invoice
      operationId: sendDigitalInvoice
      parameters:
        - name: x-origin
          in: header
          required: false
          schema:
            type: string
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: async
          in: query
          description: Whether to send the message asynchronously
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DigitalInvoiceRequest"
        required: true
      responses:
        "201":
          description: Successful Operation
          headers:
            Location:
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResult"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MessageResult"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/status/message/{messageId}:
    get:
      tags:
        - Status and History Resources
      summary: Get the status for a single message and its deliveries
      operationId: getMessageStatus
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResult"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MessageResult"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/status/delivery/{deliveryId}:
    get:
      tags:
        - Status and History Resources
      summary: Get the status for a single delivery
      operationId: getDeliveryStatus
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: deliveryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryResult"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/DeliveryResult"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/status/batch/{batchId}:
    get:
      tags:
        - Status and History Resources
      summary: "Get the status for a message batch, its messages and their deliveries"
      operationId: getBatchStatus
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: batchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageBatchResult"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/MessageBatchResult"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/statistics:
    get:
      tags:
        - Status and History Resources
      summary: Get delivery statistics
      operationId: getStatistics
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: messageType
          in: query
          description: Message type
          required: false
          schema:
            type: string
            enum:
              - MESSAGE
              - EMAIL
              - SMS
              - WEB_MESSAGE
              - DIGITAL_MAIL
              - DIGITAL_INVOICE
              - SNAIL_MAIL
              - LETTER
              - SLACK
        - name: from
          in: query
          description: "From-date (inclusive). Format: yyyy-MM-dd (ISO8601)"
          required: false
          schema:
            type: string
            format: date
        - name: to
          in: query
          description: "To-date (inclusive). Format: yyyy-MM-dd (ISO8601)"
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Statistics"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Statistics"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/statistics/departments/{department}:
    get:
      tags:
        - Status and History Resources
      summary: Get letter delivery statistics by department
      operationId: getDepartmentStatistics
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: department
          in: path
          description: Department name
          required: true
          schema:
            type: string
        - name: origin
          in: query
          description: Origin name
          required: false
          schema:
            type: string
        - name: from
          in: query
          description: "From-date (inclusive). Format: yyyy-MM-dd (ISO8601)"
          required: false
          schema:
            type: string
            format: date
        - name: to
          in: query
          description: "To-date (inclusive). Format: yyyy-MM-dd (ISO8601)"
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DepartmentStatistics"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DepartmentStatistics"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/statistics/departments:
    get:
      tags:
        - Status and History Resources
      summary: Get letter delivery statistics by department
      operationId: getDepartmentStatistics_1
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: origin
          in: query
          description: Origin name
          required: false
          schema:
            type: string
        - name: from
          in: query
          description: "From-date (inclusive). Format: yyyy-MM-dd (ISO8601)"
          required: false
          schema:
            type: string
            format: date
        - name: to
          in: query
          description: "To-date (inclusive). Format: yyyy-MM-dd (ISO8601)"
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DepartmentStatistics"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DepartmentStatistics"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/message/{messageId}:
    get:
      tags:
        - Status and History Resources
      summary: Get a message and all its deliveries
      operationId: getMessage
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HistoryResponse"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HistoryResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/conversation-history/{partyId}:
    get:
      tags:
        - Status and History Resources
      summary: Get the entire conversation history for a given party
      operationId: getConversationHistory
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: partyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: from
          in: query
          description: "From-date (inclusive). Format: yyyy-MM-dd (ISO8601)"
          required: false
          schema:
            type: string
            format: date
        - name: to
          in: query
          description: "To-date (inclusive). Format: yyyy-MM-dd (ISO8601)"
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HistoryResponse"
            application/problem+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HistoryResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /api-docs:
    get:
      tags:
        - API
      summary: OpenAPI
      operationId: getApiDocs
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: string
      x-auth-type: None
      x-throttling-tier: Unlimited
      x-wso2-mutual-ssl: Optional
components:
  schemas:
    ExternalReference:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
          description: The external reference key
          example: flowInstanceId
        value:
          type: string
          description: The external reference value
          example: 356t4r34f
      description: External references
    WebMessageAttachment:
      type: object
      properties:
        fileName:
          type: string
          description: File name
        mimeType:
          type: string
          description: Mime-type
        base64Data:
          type: string
          description: "BASE64-encoded file, max size 10 MB"
      description: Attachment
    WebMessageParty:
      required:
        - partyId
      type: object
      properties:
        partyId:
          type: string
          description: The message party id
          format: uuid
        externalReferences:
          type: array
          description: External references
          items:
            $ref: "#/components/schemas/ExternalReference"
      description: Party
    WebMessageRequest:
      required:
        - message
        - party
      type: object
      properties:
        party:
          $ref: "#/components/schemas/WebMessageParty"
        message:
          type: string
          description: Message
        oepInstance:
          type: string
          description: Determines if the message should be added to the internal or
            external OeP instance
          example: internal
          enum:
            - internal
            - external
        attachments:
          maxItems: 10
          minItems: 0
          type: array
          items:
            $ref: "#/components/schemas/WebMessageAttachment"
    Problem:
      type: object
      properties:
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: "#/components/schemas/StatusType"
        title:
          type: string
        detail:
          type: string
    StatusType:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        reasonPhrase:
          type: string
    DeliveryResult:
      type: object
      properties:
        deliveryId:
          type: string
          description: The delivery id
          format: uuid
        messageType:
          $ref: "#/components/schemas/MessageType"
        status:
          $ref: "#/components/schemas/MessageStatus"
      description: Delivery result
    MessageResult:
      type: object
      properties:
        messageId:
          type: string
          description: The message id
          format: uuid
        deliveries:
          type: array
          description: The message deliveries
          items:
            $ref: "#/components/schemas/DeliveryResult"
      description: Message result
    MessageStatus:
      type: string
      description: Status
      enum:
        - PENDING
        - AWAITING_FEEDBACK
        - SENT
        - NOT_SENT
        - FAILED
        - NO_CONTACT_SETTINGS_FOUND
        - NO_CONTACT_WANTED
    MessageType:
      type: string
      description: Message type
      enum:
        - MESSAGE
        - EMAIL
        - SMS
        - WEB_MESSAGE
        - DIGITAL_MAIL
        - DIGITAL_INVOICE
        - SNAIL_MAIL
        - LETTER
        - SLACK
    SmsRequest:
      required:
        - message
        - mobileNumber
      type: object
      properties:
        party:
          $ref: "#/components/schemas/SmsRequestParty"
        sender:
          maxLength: 11
          minLength: 3
          type: string
          description: "The sender of the SMS, swedish letters(å,ä,ö) will be replaced\
            \ by (a,a,o) respectively"
          example: sender
        mobileNumber:
          type: string
          description: Mobile number. Should start with +467x
        message:
          type: string
          description: Message
        priority:
          type: string
          description: "Priority (optional, will be defaulted to NORMAL if not present)"
          enum:
            - HIGH
            - NORMAL
    SmsRequestParty:
      type: object
      properties:
        partyId:
          type: string
          description: The message party id
          example: f427952b-247c-4d3b-b081-675a467b3619
        externalReferences:
          type: array
          description: External references
          items:
            $ref: "#/components/schemas/ExternalReference"
      description: Party
    SmsBatchRequest:
      required:
        - message
        - parties
      type: object
      properties:
        sender:
          maxLength: 11
          minLength: 3
          type: string
          description: "The sender of the SMS, swedish letters(å,ä,ö) will be replaced\
            \ by (a,a,o) respectively"
          example: sender
        message:
          type: string
          description: Message to send as sms
        priority:
          type: string
          description: "Priority (optional, will be defaulted to NORMAL if not present)"
          enum:
            - HIGH
            - NORMAL
        parties:
          type: array
          description: Parties to send the sms message to
          items:
            $ref: "#/components/schemas/SmsBatchRequestParty"
    SmsBatchRequestParty:
      required:
        - mobileNumber
      type: object
      properties:
        partyId:
          type: string
          description: The message party id (optional)
          example: f427952b-247c-4d3b-b081-675a467b3619
        mobileNumber:
          type: string
          description: "Mobile number, which should start with +467x"
      description: Parties to send the sms message to
    MessageBatchResult:
      type: object
      properties:
        batchId:
          type: string
          description: The batch id
          format: uuid
        messages:
          type: array
          description: The individual message results
          items:
            $ref: "#/components/schemas/MessageResult"
      description: Message batch result
    SlackRequest:
      required:
        - channel
        - message
        - token
      type: object
      properties:
        token:
          type: string
          description: App/bot token
        channel:
          type: string
          description: Channel name/id
        message:
          type: string
          description: Message (supports Slack markdown formatting)
    Email:
      required:
        - address
        - name
      type: object
      properties:
        name:
          type: string
          description: The sender of the e-mail
        address:
          type: string
          description: Sender e-mail address
          example: sender@sender.se
        replyTo:
          type: string
          description: Reply-to e-mail address
          example: sender@sender.se
    Message:
      required:
        - message
        - party
      type: object
      properties:
        party:
          $ref: "#/components/schemas/MessageParty"
        filters:
          type: object
          additionalProperties:
            type: array
            description: Filters
            example:
              someAttributeName:
                - someAttributeValue
            items:
              type: string
              description: Filters
              example: "{\"someAttributeName\":[\"someAttributeValue\"]}"
          description: Filters
          example:
            someAttributeName:
              - someAttributeValue
        sender:
          $ref: "#/components/schemas/MessageSender"
        subject:
          type: string
          description: The message subject (for E-mails)
        message:
          type: string
          description: Plain-text message text
        htmlMessage:
          type: string
          description: "HTML message text, for e-mails (BASE64-encoded)"
      description: The messages to be sent
    MessageParty:
      required:
        - partyId
      type: object
      properties:
        partyId:
          type: string
          description: The message party id
          format: uuid
        externalReferences:
          type: array
          description: External references
          items:
            $ref: "#/components/schemas/ExternalReference"
      description: Party
    MessageRequest:
      required:
        - messages
      type: object
      properties:
        messages:
          type: array
          description: The messages to be sent
          items:
            $ref: "#/components/schemas/Message"
    MessageSender:
      type: object
      properties:
        email:
          $ref: "#/components/schemas/Email"
        sms:
          $ref: "#/components/schemas/Sms"
      description: Sender
    Sms:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 11
          minLength: 0
          type: string
          description: The sender of the SMS
          example: sender
    LetterAttachment:
      required:
        - content
        - deliveryMode
        - filename
      type: object
      properties:
        deliveryMode:
          type: string
          description: |
            Delivery mode, to indicate whether an attachment is intended/allowed to be used for
            digital mail, snail-mail or any of them
          enum:
            - ANY
            - DIGITAL_MAIL
            - SNAIL_MAIL
        filename:
          type: string
          description: Filename
        contentType:
          type: string
          description: Content type
          enum:
            - application/pdf
        content:
          type: string
          description: Content (BASE64-encoded)
      description: Attachment
    LetterParty:
      required:
        - partyIds
      type: object
      properties:
        partyIds:
          minItems: 1
          type: array
          items:
            type: string
            description: The message party ids
            format: uuid
        externalReferences:
          type: array
          description: External references
          items:
            $ref: "#/components/schemas/ExternalReference"
      description: Party
    LetterRequest:
      required:
        - attachments
        - department
        - party
        - subject
      type: object
      properties:
        party:
          $ref: "#/components/schemas/LetterParty"
        subject:
          type: string
          description: Subject
        sender:
          $ref: "#/components/schemas/LetterSender"
        contentType:
          type: string
          description: Content type
          enum:
            - text/plain
            - text/html
        body:
          type: string
          description: "Body (plain text if contentType is set to 'text/plain', BASE64-encoded\
            \ if contentType is set to 'text/html')"
        department:
          type: string
          description: Department and unit that should be billed in case of snailmail
          example: "SBK(Gatuavdelningen, Trafiksektionen)"
        deviation:
          type: string
          description: If the letter to send deviates from the standard
          example: A3 Ritning
        attachments:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/LetterAttachment"
    LetterSender:
      required:
        - supportInfo
      type: object
      properties:
        supportInfo:
          $ref: "#/components/schemas/LetterSenderSupportInfo"
      description: Sender
    LetterSenderSupportInfo:
      required:
        - text
      type: object
      properties:
        text:
          type: string
          description: Text
        emailAddress:
          type: string
          description: E-mail address
        phoneNumber:
          type: string
          description: Phone number
        url:
          type: string
          description: URL
      description: Support info
    EmailAttachment:
      required:
        - content
        - name
      type: object
      properties:
        name:
          type: string
          description: The attachment filename
          example: test.txt
        contentType:
          type: string
          description: The attachment content type
          example: text/plain
        content:
          type: string
          description: The attachment (file) content as a BASE64-encoded string
          example: aGVsbG8gd29ybGQK
      description: Attachment
    EmailRequest:
      required:
        - emailAddress
        - subject
      type: object
      properties:
        party:
          $ref: "#/components/schemas/EmailRequestParty"
        emailAddress:
          type: string
          description: Recipient e-mail address
        subject:
          type: string
          description: E-mail subject
        message:
          type: string
          description: E-mail plain-text body
        htmlMessage:
          type: string
          description: E-mail HTML body (BASE64-encoded)
        sender:
          $ref: "#/components/schemas/EmailSender"
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/EmailAttachment"
        headers:
          type: object
          additionalProperties:
            type: array
            description: Headers
            items:
              type: string
              description: Headers
          description: Headers
    EmailRequestParty:
      type: object
      properties:
        partyId:
          type: string
          description: The message party id
          format: uuid
        externalReferences:
          type: array
          description: External references
          items:
            $ref: "#/components/schemas/ExternalReference"
      description: Party
    EmailSender:
      required:
        - address
        - name
      type: object
      properties:
        name:
          type: string
          description: The sender of the e-mail
        address:
          type: string
          description: Sender e-mail address
          example: sender@sender.se
        replyTo:
          type: string
          description: Reply-to e-mail address
          example: sender@sender.se
      description: Sender
    EmailBatchRequest:
      required:
        - parties
        - subject
      type: object
      properties:
        parties:
          type: array
          items:
            $ref: "#/components/schemas/Party"
        subject:
          type: string
          description: E-mail subject
        message:
          type: string
          description: E-mail plain-text body
        htmlMessage:
          type: string
          description: E-mail HTML body (BASE64-encoded)
        sender:
          $ref: "#/components/schemas/EmailSender"
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/EmailAttachment"
        headers:
          type: object
          additionalProperties:
            type: array
            description: Headers
            items:
              type: string
              description: Headers
          description: Headers
    Party:
      required:
        - emailAddress
      type: object
      properties:
        partyId:
          type: string
          description: The message parties id
          format: uuid
          example: e8660aab-6df9-4ed5-86d1-d9b90a5f7e87
        emailAddress:
          type: string
          description: Recipient e-mail address
          example: someone@somewhere.com
    DigitalMailAttachment:
      required:
        - content
        - filename
      type: object
      properties:
        contentType:
          type: string
          description: Content type
          enum:
            - application/pdf
        content:
          type: string
          description: Content (BASE64-encoded)
        filename:
          type: string
          description: Filename
      description: Attachment
    DigitalMailParty:
      required:
        - partyIds
      type: object
      properties:
        partyIds:
          minItems: 1
          type: array
          items:
            type: string
            description: The message party ids
            format: uuid
        externalReferences:
          type: array
          description: External references
          items:
            $ref: "#/components/schemas/ExternalReference"
      description: Party
    DigitalMailRequest:
      required:
        - body
        - contentType
        - party
      type: object
      properties:
        party:
          $ref: "#/components/schemas/DigitalMailParty"
        sender:
          $ref: "#/components/schemas/DigitalMailSender"
        subject:
          type: string
          description: Subject
          nullable: true
        department:
          type: string
          description: Department and unit that should be billed for the message
          nullable: true
          example: "SBK(Gatuavdelningen, Trafiksektionen)"
        contentType:
          type: string
          description: Content type
          enum:
            - text/plain
            - text/html
        body:
          type: string
          description: "Body (plain text if contentType is set to 'text/plain', BASE64-encoded\
            \ if contentType is set to 'application/html')"
        attachments:
          type: array
          description: Attachments
          items:
            $ref: "#/components/schemas/DigitalMailAttachment"
    DigitalMailSender:
      required:
        - supportInfo
      type: object
      properties:
        supportInfo:
          $ref: "#/components/schemas/DigitalMailSenderSupportInfo"
      description: Sender
    DigitalMailSenderSupportInfo:
      required:
        - text
      type: object
      properties:
        text:
          type: string
          description: Text
        emailAddress:
          type: string
          description: E-mail address
        phoneNumber:
          type: string
          description: Phone number
        url:
          type: string
          description: URL
      description: Support info
    Details:
      required:
        - accountNumber
        - accountType
        - amount
        - dueDate
        - paymentReference
        - paymentReferenceType
      type: object
      properties:
        amount:
          type: number
          description: The invoice amount
          format: float
          example: 123.45
        dueDate:
          type: string
          description: The invoice due date
          format: date
          example: 2023-10-09
        paymentReferenceType:
          type: string
          enum:
            - SE_OCR
            - TENANT_REF
        paymentReference:
          maxLength: 25
          type: string
          description: The payment reference number
          example: "426523791"
        accountType:
          type: string
          enum:
            - BANKGIRO
            - PLUSGIRO
        accountNumber:
          type: string
          description: The receiving account (a valid BANKGIRO or PLUSGIRO number)
          example: "12345"
      description: Invoice details
    DigitalInvoiceFile:
      required:
        - content
        - contentType
        - filename
      type: object
      properties:
        contentType:
          type: string
          description: Content type
          enum:
            - application/pdf
        content:
          type: string
          description: Content (BASE64-encoded)
        filename:
          type: string
          description: Filename
      description: Files
    DigitalInvoiceParty:
      type: object
      properties:
        partyId:
          type: string
          description: The recipient party id
          format: uuid
        externalReferences:
          type: array
          description: External references
          items:
            $ref: "#/components/schemas/ExternalReference"
      description: Party
    DigitalInvoiceRequest:
      required:
        - details
        - party
        - type
      type: object
      properties:
        party:
          $ref: "#/components/schemas/DigitalInvoiceParty"
        type:
          type: string
          description: Invoice type
          enum:
            - INVOICE
            - REMINDER
        subject:
          type: string
          description: Subject
          nullable: true
        reference:
          type: string
          description: Invoice reference
          example: "Faktura #12345"
        payable:
          type: boolean
          description: Whether the invoice is payable
          default: true
        details:
          $ref: "#/components/schemas/Details"
        files:
          type: array
          description: Files
          items:
            $ref: "#/components/schemas/DigitalInvoiceFile"
    ConstraintViolationProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        type:
          type: string
          format: uri
        status:
          $ref: "#/components/schemas/StatusType"
        violations:
          type: array
          items:
            $ref: "#/components/schemas/Violation"
        title:
          type: string
        message:
          type: string
        instance:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        detail:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    ThrowableProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        message:
          type: string
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: "#/components/schemas/StatusType"
        title:
          type: string
        detail:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    Violation:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    LetterStatistics:
      type: object
      properties:
        SNAIL_MAIL:
          $ref: "#/components/schemas/StatisticsCounter"
        DIGITAL_MAIL:
          $ref: "#/components/schemas/StatisticsCounter"
    MessageStatistics:
      type: object
      properties:
        EMAIL:
          $ref: "#/components/schemas/StatisticsCounter"
        SMS:
          $ref: "#/components/schemas/StatisticsCounter"
        UNDELIVERABLE:
          type: integer
          format: int32
    Statistics:
      type: object
      properties:
        EMAIL:
          $ref: "#/components/schemas/StatisticsCounter"
        SMS:
          $ref: "#/components/schemas/StatisticsCounter"
        WEB_MESSAGE:
          $ref: "#/components/schemas/StatisticsCounter"
        DIGITAL_MAIL:
          $ref: "#/components/schemas/StatisticsCounter"
        SNAIL_MAIL:
          $ref: "#/components/schemas/StatisticsCounter"
        MESSAGE:
          $ref: "#/components/schemas/MessageStatistics"
        LETTER:
          $ref: "#/components/schemas/LetterStatistics"
    StatisticsCounter:
      type: object
      properties:
        sent:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
    DepartmentLetterStatistics:
      type: object
      properties:
        DEPARTMENT:
          type: string
        SNAIL_MAIL:
          $ref: "#/components/schemas/StatisticsCounter"
        DIGITAL_MAIL:
          $ref: "#/components/schemas/StatisticsCounter"
    DepartmentStatistics:
      type: object
      properties:
        ORIGIN:
          type: string
        DEPARTMENT_STATISTICS:
          type: array
          items:
            $ref: "#/components/schemas/DepartmentLetterStatistics"
    HistoryResponse:
      type: object
      properties:
        messageType:
          type: string
          enum:
            - MESSAGE
            - EMAIL
            - SMS
            - WEB_MESSAGE
            - DIGITAL_MAIL
            - DIGITAL_INVOICE
            - SNAIL_MAIL
            - LETTER
            - SLACK
        status:
          type: string
          enum:
            - PENDING
            - AWAITING_FEEDBACK
            - SENT
            - NOT_SENT
            - FAILED
            - NO_CONTACT_SETTINGS_FOUND
            - NO_CONTACT_WANTED
        content:
          type: object
        timestamp:
          type: string
          format: date-time
  securitySchemes: { }
